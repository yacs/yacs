/**
 * Core styles generated by YACS
 *
 * This is a reference style sheet of YACS, and it may be automatically updated
 * on each new software release.
 *
 * By default thoses styles are compiled and merged with skin's specific rules,
 * preceded by knacss' styles.
 * Use yourskin/skin.php and initialize function, set NO_YACSS constant to false
 * if you don't what this to be included in your project.
 *
 * $author Alexis Raimbault
 * $reference
 * $license http://www.gnu.org/copyleft/lesser.txt GNU Lesser General Public License
 */

/////////////
// namespace prefix, defined by php before compilation
// default is "y-" but you can overide this in your skin.php
$yacs-namespace: $y-prefix;

// path to this sheet, used to declare ressources as background image
$path : rPath() + "skins/_reference/";



////////////////////// 
// MIXINs
//
// those are mixins used within this scss script


// to enlight a element while hovered, focused or active
@mixin x-enlight {
    
    position : relative;
    
    &:hover,
    &:focus,
    &:active {
    
        // enlight this with a pseudo class
        // that will cover it with transparency stuff
        &::before {
            position: absolute;
            top:0;left:0;            // fit to parent
            height:100%;width:100%;  // fit to parent
            content: '';             // only a background
            background: $color-enlighter;
            pointer-events: none;   // allow to click thru it
            border-radius:inherit;  // fit to parent
        }
    }
}

// to provide a readable text color for button according to their
// background color

@mixin x-readable-text-color($back-color) {
    @if lightness($back-color) >= 50% {
        color: darken(desaturate($back-color,15%),40%);
    } @else {
        color: darken(desaturate($back-color,15%),40%);
    }
}




//// give a shape of a button
// @see skins/_reference/variables.scss
@mixin x-button {
    
        box-shadow:$button-shadow;
        background:$button-gradient;
        background-color:$color-button;
        border-top-left-radius:$button-radius-top-left;
        border-bottom-right-radius:$button-radius-bot-right;
        border-top-right-radius:$button-radius-top-right;
        border-bottom-left-radius:$button-radius-bot-left;
        border:$button-border;
        @include x-readable-text-color($color-button);
        text-decoration: none;
        padding : 0 0.5em;
        margin : 0.1em 0.2em;

        &:hover {
            background: $button-gradient-hover;
            background-color:$color-button-light;
            @include x-readable-text-color($color-button);
            text-decoration: none;
        }

        &:visited {
            @include x-readable-text-color($color-button);
        }

        &:active {
            position:relative;
            top : 1px;
        }
}

/////////////
// Helper classes
//
// used by yacs for specific contents
//

// error -- report on abnormal conditions
.#{$yacs-namespace}error {
    color: red;
}

// editable object
.#{$yacs-namespace}editable:hover {
    background: $color-shadower;
}

// separate page details from content
#page_details {
    clear:both;
    margin-top : 1em;
}

// a interactive command that is emphatized when hovered
.#{$yacs-namespace}command {
    opacity: 0.7;

    &:hover {
        opacity:1;
    }
}

// a icon that is commonly used to open/close menu on tiny screen
// consisting of three horizontal bars, looking like a hamburger
// <label><span></span></label>
.#{$yacs-namespace}hamburger {

    display:block;
    padding:5px;
    background : $color-link;
    cursor: pointer;
    margin:0;
    // size will be defined by another class, but something
    // about 40px is expected;

    // shape of the bars
    // we use pseudo class to form the first and last bar
    span, span::before, span::after {

        background: #ffffff none repeat scroll 0 0;
        content: "";
        display: block;
        position: relative;
        transition: all 200ms ease-in-out 0s;
    }

    // position and size
    span {
        top:13px;
        height: 3px;

        &::after {bottom: -5px;height:4px;}

        &::before {top: -8px;height:3px;}
    }
}

// not visible to ordinary browsers -- accessibility tweak
.#{$yacs-namespace}away { 
	position: absolute;
	left: -999px;
	width: 990px;
}


////////////////
//
// Standard tags
//

a {color:$color-link;}
a:visited {color:lighten($color-link,10%);}
a:hover {color:darken($color-link,10%);cursor:pointer;}

////////////////
// Navigation tabs
//
// the main navigation of the website
// by defaut a horizontal menu at the top
// could be two-level drop menu so we use nested <ul>
// $see skins/pages.php
//


.#{$yacs-namespace}tabs { 

    position:relative;  // for responsive menu icon
    min-height:38px;
    background:$color-nav-back;
    
    & > ul {
        list-style: none; // no bullets
        padding:0; // no indent

        // first level links
        & > li > a {
            text-decoration: none;
            display:block;
            padding : 0.2em 1em;
            font-size : $font-size-nav;
            min-height : 38px;  // finger touch friendly
            margin-bottom : 1px; // separation with siblings
            color:$color-nav-link;
            background-color: $color-nav-tabs;
            // transition form current focus
            transition: background-color 500ms ease-in;
            transition: color 500ms ease-in;

            // react on hover, focus and active states
            @include x-enlight();

            // emphatize current focus
            &.current {
                background-color:$color-nav-cur-bckg;
                color: $color-nav-cur-link;
            }
        }
    }
}

.#{$yacs-namespace}dropmenu {
    max-height:0; // second level hidden by default;
    overflow: hidden;
    padding : 0 .2em;
    transition: max-height 1s ease-in; // drop visual effect
    
    ul {
        list-style: none;
        padding:0;
        
        li {
            @include x-enlight();
        }
    }
}

.#{$yacs-namespace}tabs li:hover{
    
        .#{$yacs-namespace}dropmenu {
             max-height:999px;  // dropmenu will get it's natural height
        }
}

// tabs on big screen
// uses flexbox
@media (min-width: $medium){
    
    #header_panel {overflow: visible;} // ensure dropdown menu will be display
    
    .#{$yacs-namespace}tabs { 
        
        overflow:visible;
        
        & > ul {
            display: flex;
            flex-wrap : wrap;

            & > li {
                position:relative;  // to position dropmenu
                border-bottom : 1px solid $color-tabs-borders;

                .#{$yacs-namespace}dropmenu {
                    position:absolute;
                    top:98%;
                    z-index:200;
                    background-color: $color-nav-tabs;
                    width:200px;
                }
                
                &:hover .#{$yacs-namespace}dropmenu{
                    border : 1px solid $color-tabs-borders;
                    border-top : none;
                    padding-bottom: .2em;
                    padding-top : .5em;
                }
            }
        }
    }
}

////////////////
// Edition tabs
//
// tabs layout used it almost all edition form
// $see Skin::build_tabs() in skin_skeleton.php
//
.#{$yacs-namespace}tabs-bar {
    margin: 2em 0 1em 0;    // space arround tabs
    position : relative;    // to position menu icon

    // default shape of a tabs
    // as a blocks (tiny-screen)
    a {
        display : block;
        padding : .4em 1em;
        text-decoration : none;
        color:$color-link;
        background-color: $color-tabs;

        height:38px;
        margin-bottom : 2px; // separation between tabs
        
        // react on hover, focus and active states
        @include x-enlight();
    }

    .#{$yacs-namespace}tab-foreground {
        background-color:$color-link;
        color: #FFF;
        opacity:1;
    }
}

// requierement for a panel
.#{$yacs-namespace}tabs-panels {
    padding: 2px 0;
    margin-top : 1em;
    min-height: 200px;
    overflow: none;
    position: relative;
}

.#{$yacs-namespace}panel-foreground {
    display: block;
}

.#{$yacs-namespace}panel-background {
    display: none;
}

// navigation links used in step by step mode
.#{$yacs-namespace}step {
    display :inline-block;
}

.#{$yacs-namespace}tabs-mini-toggle {
    display:block;
    position:absolute;
    top : 0px;
    right: 0px;
    height:38px;
    width:38px;
}

// special rules for large screens
// tabs as a flexbox
@media (min-width: $medium){

    .#{$yacs-namespace}tabs-bar {
        display : flex;
        flex-wrap : wrap;
        align-items: flex-start;
        border-bottom: 1px solid $color-tabs-borders;

        a {
            // shape of a tab
            border : 1px solid $color-tabs-borders;
            border-bottom: none;
            border-radius : 10px 10px 0 0;
            margin-right: 1px;
            margin-bottom: 0;
            height:auto;
        }

        .#{$yacs-namespace}tab-foreground {
            // signal current tab with a colored line
            background-image : linear-gradient(to right,currentColor, currentColor);
            background-repeat: no-repeat;
            background-size: 100% 3px;
            background-position: center bottom;

            // override colors from small screen mode
            color:$color-link;
            background-color:$color-tabs;
        }
    }

    // we don't need icon on large screen
    .#{$yacs-namespace}tabs-mini-toggle {
        display:none;
    }

}

///////////
// images
//
// Most of the below is coming from Skin::build_image(),
//
// $see skins/skin_skeleton.php
//

// figures should not oversize their parent's width
figure {max-width: 100%;}

// an image in the middle of the page [image=xx, center]
.#{$yacs-namespace}center-image {
    clear: both;
    text-align: center;
    margin: 8px 0 8px 0;
}

// an image floated to the left -- [image=xx, left]
.#{$yacs-namespace}left-image {
    float: left;
    clear:left;
    margin: 8px 8px 8px 0;
}

// an image floated to the rift -- [image=xx, right]
.#{$yacs-namespace}right-image {
    float: right;
    clear:right;
    margin: 8px 0 8px 8px;
}

// float thumbnails to align them
.#{$yacs-namespace}thumbnail-image {
    float: left;
    margin-right: 8px;
}

// caption under image
.#{$yacs-namespace}image-caption {
    padding: 6px;
    font-size: 0.9em;
}

// direct edition link,
// hidden by default
.#{$yacs-namespace}image-edit {
    display:none;
    position:absolute;
    top:1px;
    left:3px;

}

.#{$yacs-namespace}thumbnail-image,
.#{$yacs-namespace}left-image,
.#{$yacs-namespace}right-image,
.#{$yacs-namespace}center-image,
.#{$yacs-namespace}inline-image
{
    display:block;
    position:relative;
    text-align: center; // this center the image, if caption is larger

    // edition link visible while parent is hovered
    &:hover .#{$yacs-namespace}image-edit {
        display:block;
    }
}

.#{$yacs-namespace}inline-image {display: inline-block;}
////////////
// Modal box
//
// this box display content over a standard page
// which still in the background
//

// the grey overlay that sits behind the modal box
#modal_panel {	
	position: fixed;
	top: 0;left: 0;right:0;height:0;
        z-index: 1999; /* just below #modal_centered */
	min-height: 100%;
	background: $color-shadower;
	
}

// the centered container
#modal_centered { 
	position: absolute;
	top: 30%;	// top and left will be adjusted dynamically through javascript
	left: 30%;
        z-index: 2000;
	background-color: $color-modal;
	box-shadow : 0 0 5px #333;
	margin: 0 auto;
	padding: 4px;	
}

// allow scrolling in the modal box
#modal_content {
    overflow-y : auto;
}

// buttons used by the box
#modal_content .boxButtons {
	margin-top: 0.5em;
	padding: 0.5em 0 0.3em 0;
	text-align: center;
}

// title of the modal box
#modal_content .boxTitle {
	margin-top: 0;
	padding-top: 0;
	text-align: center;
}

// closing anchor of the modal box
// at its top right corner
#modal_close {
    position : absolute;
    top: -22px;
    right: -20px;   
    
    background: $color-modal;
    font-weight: bold;
    font-size: 2em;
    
    padding : 0 10px;
    border-radius : 15px;
    box-shadow: 6px 1px 5px #777;
    
    cursor : pointer;
    text-decoration: none;
    
    &:before {
        content: "×";
    }
}

///////////////////////
// Aside boxes
//
// extra-box and navigation-box

.#{$yacs-namespace}extra-box,
.#{$yacs-namespace}navigation-box {
    
    ul {
        list-style: none;
        
        a {
            text-decoration: none;
        }
    }
    
}


///////////////////////
//
// Contextual menu
//
// display sections tree
//

#contextual_menu {
    
    // tiny font
    font-size: 10px;
    line-height: 14px;
    
    // class for top level
    .tree {
        margin: 0;
        padding: 0;
        
        // branches
        ul {
            background: url('#{$path}tree/vertical.gif') repeat-y 0px 100%;
            padding : 0;
            
            // nodes
            li {
                padding-left: 14px;
                background: url('#{$path}tree/node.gif') no-repeat top left;
                
                // last node
                &.last {
                    background-image: url('#{$path}tree/last.gif');
                }
                
                // path to the current element
                &.open > a, &.current > a {
                    font-weight: bold;
                    font-style: italic;
                    padding-left: 16px;
                    background: transparent url('#{$path}tree/open.gif') no-repeat top left;
                    text-decoration: none;
                }
                
                // other pathes, closed
                a.close, a.below {
                    padding-left: 16px;
                    background: transparent url('#{$path}tree/close.gif') no-repeat top left;
                    text-decoration:none;
                }
                
            }
        }
    }
}

/////////////////////
//
// Page menu
//
// a set of buttons

.#{$yacs-namespace}page-menu,
.#{$yacs-namespace}menu-bar,
.#{$yacs-namespace}neighbours {
    
    display: flex;
    flex-wrap: wrap;
    line-height : 2em;
    margin: .2em 0 .5em;
    
    // all menu entries are shapped like button
    a {
        @include x-button();
    }
    
    // sometime <a> is wrapped in a span or div
    // display inline-block to fit height
    span a, div a {
        display : inline-block;
    }
}

// neighbours navigation bar
.#{$yacs-namespace}neighbours {
    
    justify-content: space-between;
    margin : .5em 0 1em;
    
    .pager-current {
        // no click on current page
        pointer-events: none;
        cursor:default;
        position:relative;
        
        // empathize current page
        &:before {
            content :'';
            background: $color-link;
            position:absolute;
            top:0;bottom:0;left:0;right:0;
            border-radius:inherit;
            opacity:.5;
        }
    }
    
}

///////////////
//
// Standard button
//

.#{$yacs-namespace}button {

    @include x-button();
    @include x-enlight();
    
    height: 4.5rem;
    line-height: 4.5rem;
    display : inline-block;
    
}

/////////////////
//
// Sidebox, within content
//

.#{$yacs-namespace}sidebar-box {
    float : right;
    overflow: hidden;
    background:$color-tabs;
    font-size: 1.1rem;
    padding: 0.5rem;
    margin-left:1em;
}

////////////////
//
// Folder box, unfold with javascript
//

.#{$yacs-namespace}folder-box {
    margin : 0.2em 0;
}

.#{$yacs-namespace}folder-header {
    display : block;
    background : $color-tabs-borders url('#{$path}layouts/accordion_plus.png') no-repeat left center;
    padding-left : 20px;
    
    color : $color-tabs;
    
    &.open {
        background-image : url('#{$path}layouts/accordion_minus.png');
    }
}

.#{$yacs-namespace}folder-body {
    border : 1px solid $color-tabs-borders;
    border-top : none;
    padding : 1em;
    display : none;
}

.open + .#{$yacs-namespace}folder-body {
    display : block;
    overflow : hidden;
}

////////////////////////////
//
// Tags (show categorization)
//

.#{$yacs-namespace}tags {
    // use flex layout
    display : flex;
    flex-wrap: wrap;
    align-items: baseline;
    margin : .5em 0;
    
    // shape of a tag
    & > * {
        
        margin-left: .9em;
        padding : .1em .5em;
        border : 1px solid $color-tabs-borders;
        
        // shape left side
        border-top-left-radius: 8px;
        border-bottom-left-radius: 8px;
        box-shadow: 1px 1px 2px $color-tabs-borders;
        
        background : white;
        
        position:relative;
        
        // draw like a little string
        // attached on left side
        &:before {
            content: '~';
            color: $color-tabs-borders;
            position:absolute;
            right:100%;
        }

    }
}

////////////////////
//
// details
//
// text that should be discret
// comparing to main content.

.#{$yacs-namespace}details, .#{$yacs-namespace}form-hint {
    font-family: sans-serif;
    font-size : .8em;
    color : $color-lesser;
    
    a {
        color : grey !important;
    }
}

////////////////////
//
// Crumbs
//

#crumbs { 
    
    display : flex;
    flex-wrap : wrap;
    font-size : 0.9em;
    color:grey;
    
    span {
        // space between crumb
        margin-right : 0.6em;
        &:last-child {
            margin-right: 0;
        }
        
        a {
            text-decoration: none;
        }
    }
    
    span + span:before {
            content :'\00AB';
            font-weight:bold;
            margin-right: 0.4em;
        }
}

/////////////////////
//
// Form
//

.#{$yacs-namespace}form-row {
    display : table-row;
    
    .west, .east {
        display : table-cell;
    }
    
    .west {
        vertical-align: top;
        padding: 0 1em 1em 0;
        max-width: 8em;
    }
    
    .east {
        padding: 0 0 1em 0;
    }
    
    input[type=radio], input[type=checkbox] {
        margin-top: 1em;
    }
    
    input[type=radio]+label, input[type=checkbox]+label {
        margin-left:.2em;
        max-width: 95%;
        vertical-align: top;
    }
}

.#{$yacs-namespace}form-label {
    font-style: italic;
    color : $color-lesser;
}

@media only screen and (max-width: $small) {
    
 
    .#{$yacs-namespace}form-row, .#{$yacs-namespace}form-row .west, .#{$yacs-namespace}form-row .east {
        display: block;
    }
    
}


////////
//
// Tipsy
//

/* tipsy -- see http://onehackoranother.com/projects/jquery/tipsy/ */

.tipsy { padding: 5px; font-size: 10px; position: absolute; z-index: 6000; }
.tipsy-inner { padding: 5px 8px 4px 8px; background-color: black; color: white; max-width: 200px; text-align: center; }
.tipsy-inner { border-radius: 3px; -moz-border-radius:3px; -webkit-border-radius:3px; }
.tipsy-arrow { position: absolute; background: url('#{$path}tools/tipsy.gif') no-repeat top left; width: 9px; height: 5px; }
.tipsy-n .tipsy-arrow { top: 0; left: 50%; margin-left: -4px; }
.tipsy-nw .tipsy-arrow { top: 0; left: 10px; }
.tipsy-ne .tipsy-arrow { top: 0; right: 10px; }
.tipsy-s .tipsy-arrow { bottom: 0; left: 50%; margin-left: -4px; background-position: bottom left; }
.tipsy-sw .tipsy-arrow { bottom: 0; left: 10px; background-position: bottom left; }
.tipsy-se .tipsy-arrow { bottom: 0; right: 10px; background-position: bottom left; }
.tipsy-e .tipsy-arrow { top: 50%; margin-top: -4px; right: 0; width: 5px; height: 9px; background-position: top right; }
.tipsy-w .tipsy-arrow { top: 50%; margin-top: -4px; left: 0; width: 5px; height: 9px; }

